PALETA 1
    #DABC86
    #8894A0
    #2E4B77
    #27350F

PALETA 2 - Cool and fresh
    #05386B
    #389583
    #5cd894
    #8de4af
    #edf5e0

PALETA 3 - Bright accent colors
    #242582
    #563d67
    #f54f74
    #99728d
    #3e3e83

PALETA 4 - Colorful and balanced
    #e27d5f
    #85cdca
    #e0a87c
    #d97694
    #4083a2

PALETA 5 - Stylish and sophisticated
    #5d5c61
    #938e94
    #7395ae
    #557a95
    #b0a295

PALETA 6 - Striking and simple
    #0b0c10
    #202833
    #c5c6c8
    #66fcf1
    #46a29f

PALETA 7 - Red and lively
    #5d001d
    #e3e2de
    #e3af8c
    #981750
    #ee4c7d

PALETA 8 - Artsy and creative
    #d79922
    #efe1ba
    #ed3817
    #4056a1
    #c5cbe3

PALETA 9 - Audacious and vibrant
    #fc4444
    #40eee5
    #55bdca
    #95caef
    #cafafe

PALETA 10
    #0e3854
    #067eed
    #ff7c1f
    #c1e6ff
    #ffffff

PALETA 11
    #280b6f
    #6730ec
    #7984ee
    #d2f6fc
    #ffffff

PALETA 12
    #132743
    #db1d4b
    #ff6187
    #f9e3a2
    #ffffff

PALETA 13
    #23374d
    #0085ff
    #85c3ff
    #eeeeee
    #ffffff

PALETA 14
    #1d0229
    #ba49f0
    #ea2121
    #ffd644
    #ffffff

function conteo() {
            alert("Funcionando");
            const sidebar = document.querySelector('.detallesproyecto');
            const circuloProgreso = document.querySelector('.circulo');

            const totalTareas = document.querySelectorAll('.tarea');
            const completadas = document.querySelectorAll('a.completo.activo');
            const noCompletadas = document.querySelectorAll('a.nocompleto.activo');

            //  Selecciona la cantidad de tareas por departamento
            const tareasAnalisis = document.querySelectorAll('p#analisis');
            const tareasDiseno = document.querySelectorAll('p#diseno');
            const tareasCoding = document.querySelectorAll('p#coding');
            const tareasTesting = document.querySelectorAll('p#testing');
            const tareasSoporte = document.querySelectorAll('p#soporte');

            // Selecciona las barras de progreso del departamento para formatear el texto
            const barraAnalisis = document.querySelector('#barraAnalisis');
            const barraDiseno = document.querySelector('#barraDiseno');
            const barraCoding = document.querySelector('#barraCoding');
            const barraTesting = document.querySelector('#barraTesting');
            const barraSoporte = document.querySelector('#barraSoporte');
            // barraAnalisis.parentElement.nextSibling para seleccionar el 5/7 y asi

            // Declaracion de variables para el conteo del total de las tareas completadas por departamento
            var analisisCompletadas = 0;
            var disenoCompletadas = 0;
            var codingCompletadas = 0;
            var testingCompletadas = 0;
            var soporteCompletadas = 0;


            // Pues, no se que onda jaja
            // Si no me equivoco, en esta parte ciclo todo el arreglo del total de tareas para ver el departamento que tienen
            // Mmm, debo hacer que se verifique su sibling para buscar la clase completado
            // UPDATE: se cicla el arreglo totalTareas que fue previamente sacado mas arribita.
            // Se accede a su tercer hijo, el cual es el parrafo, para de ahi extraer el id que se le asigno al parrafo
            // Despues de tener este id se pasa por un switch para filtrar los departamentos, bloque en el cual haremos mucho
            // DOM scripting (se dice asi? si existe ese termino? se escucha chido)
            // Con este DOM scripting va de moviendose desde parrafoId a sus elementos hermanos hasta llegar al div donde tenemos nuestros iconos
            // Y una vez ahi en ese div checamos la etiqueta "<a>" que tenga la clase de activo
            // Finalmente teniendo el resultado de esa busqueda, le sumamos 1 a nuestra variable que declaramos aqui arribita, para tener
            // el conteo de las tareas completadas por departamento.
            totalTareas.forEach(tarea => {
                const parrafoId = tarea.children[2];
                const icono = parrafoId.nextElementSibling.nextElementSibling.firstChild;
                switch (parrafoId.id) {
                    case "analisis":
                        if (icono.classList.contains('activo')) {
                            analisisCompletadas += 1;
                        };
                        break;
                    case "diseno":
                        if (icono.classList.contains('activo')) {
                            disenoCompletadas += 1;
                        };
                        break;
                    case "coding":
                        if (icono.classList.contains('activo')) {
                            codingCompletadas += 1;
                        };
                        break;
                    case "testing":
                        if (icono.classList.contains('activo')) {
                            testingCompletadas += 1;
                        };
                        break;
                    case "soporte":
                        if (icono.classList.contains('activo')) {
                            soporteCompletadas += 1;
                        };
                        break;
                    default:
                        break;
                }
            });

            var porcentajeAnalisis = ((analisisCompletadas / tareasAnalisis.length).toFixed(2)) * 100;
            var porcentajeDiseno = ((disenoCompletadas / tareasDiseno.length).toFixed(2)) * 100;
            var porcentajeCoding = ((codingCompletadas / tareasCoding.length).toFixed(2)) * 100;
            var porcentajeTesting = ((testingCompletadas / tareasTesting.length).toFixed(2)) * 100;
            var porcentajeSoporte = ((soporteCompletadas / tareasSoporte.length).toFixed(2)) * 100;

            if (totalTareas.length == 0) {
                var porcentajeTotal = 0;
            } else {
                var porcentajeTotal = ((completadas.length / totalTareas.length).toFixed(2)) * 100;
            }

            // Se cambia el texto dentro del parrafo donde se lleva el conteo de las tareas
            barraAnalisis.parentElement.nextElementSibling.innerHTML = analisisCompletadas + "/" + tareasAnalisis.length;
            barraDiseno.parentElement.nextElementSibling.innerHTML = disenoCompletadas + "/" + tareasDiseno.length;
            barraCoding.parentElement.nextElementSibling.innerHTML = codingCompletadas + "/" + tareasCoding.length;
            barraTesting.parentElement.nextElementSibling.innerHTML = testingCompletadas + "/" + tareasTesting.length;
            barraSoporte.parentElement.nextElementSibling.innerHTML = soporteCompletadas + "/" + tareasSoporte.length;

            // Que se hace aqui? Simple. Al inicio se tomaron las barras de color de cada departamento con un querySelector, y ahora solo se formatea el ancho de cada barrita
            // con el calculo que acabamos de hacer arribita con todo el revoltijo de variables y demas cositas
            barraAnalisis.style.width = "0%";
            barraDiseno.style.width = "0%";
            barraCoding.style.width = "0%";
            barraTesting.style.width = "0%";
            barraSoporte.style.width = "0%";
            barraAnalisis.style.width = porcentajeAnalisis + "%";
            barraDiseno.style.width = porcentajeDiseno + "%";
            barraCoding.style.width = porcentajeCoding + "%";
            barraTesting.style.width = porcentajeTesting + "%";
            barraSoporte.style.width = porcentajeSoporte + "%";

            // Cantidad de tareas
            sidebar.childNodes[1].innerHTML = "Cantidad de tareas: " + totalTareas.length;
            // Tareas terminadas
            sidebar.childNodes[2].innerHTML = "Tareas terminadas: " + completadas.length;
            // Tareas pendientes
            sidebar.childNodes[3].innerHTML = "Tareas pendientes: " + noCompletadas.length;
            // Progreso total
            circuloProgreso.firstChild.innerHTML = porcentajeTotal.toFixed(0) + "%";
            if (porcentajeTotal == 100) {
                Swal.fire({
                    title: 'Â¡FELICIDADES!',
                    text: "Has terminado el proyecto",
                })
            }
        }

        // Bloque para realizar las peticiones a Axios y DOMScripting
        if (totalTareas) {
            const opcionesTarea = document.querySelectorAll('.opcionestarea');
            opcionesTarea.forEach(tarea => {
                tarea.addEventListener('click', e => {
                    e.preventDefault();
                    if (e.target.classList.contains('fa-check-circle')) { // Al completar
                        const icono = e.target;
                        const idTarea = icono.parentElement.parentElement.parentElement.dataset.tarea;
                        // Request hacia /tareas/:id
                        const url = `${location.origin}/tarea-completada/${idTarea}`;
                        // No pasamos parametros como tal, sino indicamos la url donde se hara el patch
                        axios.patch(url, { idTarea })
                            .then(function(respuesta) {
                                icono.parentElement.classList.add("activo");
                                icono.parentElement.nextElementSibling.classList.remove("activo");
                                conteo();
                            })
                    } else if (e.target.classList.contains('fa-times-circle')) { // Al descompletar
                        const icono = e.target;
                        const idTarea = icono.parentElement.parentElement.parentElement.dataset.tarea;
                        // Request hacia /tareas/:id
                        const url = `${location.origin}/tarea-descompletada/${idTarea}`;
                        // No pasamos parametros como tal, sino indicamos la url donde se hara el patch
                        axios.patch(url, { idTarea })
                            .then(function(response) {
                                if (response.status == 200) {
                                    icono.parentElement.classList.add("activo");
                                    icono.parentElement.previousElementSibling.classList.remove("activo");
                                    conteo();
                                }
                            })
                    } else { // Al eliminar
                        const icono = e.target;
                        const idTarea = icono.parentElement.parentElement.parentElement.dataset.tarea;

                        // Request hacia /tareas/:id
                        const url = `${location.origin}/tarea-eliminar/${idTarea}`;
                        swal({
                                title: "Â¿Eliminar tarea?",
                                text: "No se podrÃ¡ recuperar.",
                                type: "warning",
                                showCancelButton: true,
                                confirmButtonColor: '#d33',
                                cancelButtonColor: '',
                                confirmButtonText: 'Eliminar tarea',
                                cancelButtonText: 'Cancelar'
                            })
                            .then((result) => {
                                if (result.value == true) {
                                    // No pasamos parametros como tal, sino indicamos la url donde se hara el patch
                                    axios.delete(url, { idTarea })
                                        .then(function(respuesta) {
                                            icono.parentElement.parentElement.parentElement.remove();
                                            conteo();
                                        });
                                }
                            });
                    }
                });
            });
        }
